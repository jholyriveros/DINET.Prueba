@using DINET.Prueba.ViewModels.Inventario;
@model InventarioViewModel

@{
    ViewData["Title"] = "Gestión inventario";
}

<h2 class="mb-4">Gestión de Inventario</h2>

<!-- Filtros -->
<form id="formFiltro" class="row g-3 mb-4" method="get" asp-controller="Inventario" asp-action="Index">
    <div class="col-md-3 col-sm-6">
        <label class="form-label">Fecha Inicio</label>
        <input type="date" class="form-control" id="fechaInicio" name="Filtro.FechaInicio" value="@Model.Filtro.FechaInicio?.ToString("yyyy-MM-dd")">
    </div>
    <div class="col-md-3 col-sm-6">
        <label class="form-label">Fecha Fin</label>
        <input type="date" class="form-control" id="fechaFin" name="Filtro.FechaFin" value="@Model.Filtro.FechaFin?.ToString("yyyy-MM-dd")">
    </div>
    <div class="col-md-3 col-sm-6">
        <label class="form-label">Tipo Movimiento</label>
        <input type="text" class="form-control" id="tipoMovimiento" name="Filtro.TipoMovimiento" value="@Model.Filtro.TipoMovimiento">
    </div>
    <div class="col-md-3 col-sm-6">
        <label class="form-label">Nro Documento</label>
        <input type="text" class="form-control" id="nroDocumento" name="Filtro.NroDocumento" value="@Model.Filtro.NroDocumento">
    </div>
    <div class="col-12 text-end">
        <button type="submit" class="btn btn-primary me-2" id="btnBuscar">Buscar</button>
        <button type="button" class="btn btn-success" id="btnNuevo">
            <i class="bi bi-plus-circle me-1"></i> Nuevo
        </button>
    </div>
</form>

<!-- Tabla de resultados -->
<div class="table-responsive">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <span class="text-muted small">Total de registros: <strong>@Model.TotalRegistros</strong></span>
    </div>

    <table class="table table-bordered table-hover table-sm shadow-sm rounded">
        <thead class="bg-light text-secondary text-uppercase text-center small align-middle" style="font-size: 0.75rem;">
            <tr>
                <th>CIA</th>
                <th>Compañía</th>
                <th>Almacén</th>
                <th>Movimiento</th>
                <th>Tipo Doc</th>
                <th>Documento</th>
                <th>Item</th>
                <th>Proveedor</th>
                <th>Almacén Destino</th>
                <th>Cantidad</th>
                <th>Doc Ref 1</th>
                <th>Doc Ref 2</th>
                <th>Doc Ref 3</th>
                <th>Doc Ref 4</th>
                <th>Doc Ref 5</th>
                <th>Fecha</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody id="tablaBody">
            @if (!(Model?.ListaInventario?.Any() ?? false))
            {
                <tr>
                    <td colspan="17">No existen registros para mostrar</td>
                </tr>
            }
            else
            {
                @foreach (var item in Model.ListaInventario)
                {
                    <tr>
                        <td>@item.COD_CIA</td>
                        <td>@item.COMPANIA_VENTA_3</td>
                        <td>@item.ALMACEN_VENTA</td>
                        <td>@item.TIPO_MOVIMIENTO</td>
                        <td>@item.TIPO_DOCUMENTO</td>
                        <td>@item.NRO_DOCUMENTO</td>
                        <td>@item.COD_ITEM_2</td>
                        <td>@item.PROVEEDOR</td>
                        <td>@item.ALMACEN_DESTINO</td>
                        <td>@item.CANTIDAD</td>
                        <td>@item.DOC_REF_1</td>
                        <td>@item.DOC_REF_2</td>
                        <td>@item.DOC_REF_3</td>
                        <td>@item.DOC_REF_4</td>
                        <td>@item.DOC_REF_5</td>
                        <td>@item.FECHA_TRANSACCION?.ToString("yyyy-MM-dd")</td>
                        <td class="text-center align-middle" style="white-space: nowrap;">
                            <button type="button"
                                    class="btn btn-sm btn-outline-primary me-1 btn-editar"
                                    data-model='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(new
                                {
                                    COD_CIA = item.COD_CIA,
                                    COMPANIA_VENTA_3 = item.COMPANIA_VENTA_3,
                                    ALMACEN_VENTA = item.ALMACEN_VENTA,
                                    TIPO_MOVIMIENTO = item.TIPO_MOVIMIENTO,
                                    TIPO_DOCUMENTO = item.TIPO_DOCUMENTO,
                                    NRO_DOCUMENTO = item.NRO_DOCUMENTO,
                                    COD_ITEM_2 = item.COD_ITEM_2
                                }))'
                                    title="Editar">
                                <i class="bi bi-pencil-square"></i>
                            </button>

                            <button type="button" class="btn btn-sm btn-outline-danger" title="Eliminar">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<!-- End Tabla de resultados -->

<!-- Paginador -->
@if (Model?.TotalPaginas > 1)
{
    <nav aria-label="Paginación">
        <ul class="pagination justify-content-center mt-0">
            @for (int i = 1; i <= Model.TotalPaginas; i++)
            {
                <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                    <form method="get" class="d-inline">
                        <input type="hidden" name="PaginaActual" value="@i" />
                        <input type="hidden" name="Filtro.FechaInicio" value="@Model.Filtro.FechaInicio?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="Filtro.FechaFin" value="@Model.Filtro.FechaFin?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="Filtro.TipoMovimiento" value="@Model.Filtro.TipoMovimiento" />
                        <input type="hidden" name="Filtro.NroDocumento" value="@Model.Filtro.NroDocumento" />
                        <button type="submit" class="page-link">@i</button>
                    </form>
                </li>
            }
        </ul>
    </nav>
}
<!-- End Paginador -->

<!-- Modal de Registro / Edición -->
<div class="modal fade" id="modalInventario" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @await Html.PartialAsync("_ModalInventarioPartial", new DINET.Prueba.Models.Request.Inventario.MovInventarioDtoRequest())
        </div>
    </div>
</div>
<!-- End Modal de Registro / Edición -->

<!-- Modal de Mensaje -->
@await Html.PartialAsync("~/Views/Shared/_ModalMensaje.cshtml")
<!-- End Modal de Mensaje -->

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        const urlCrearParcial = '@Url.Action("CrearParcial", "Inventario")';

        // Guardar registro
               $(document).on("click", "#btnGuardar", function (e) {
            e.preventDefault();

            var form = $("#formInventario");

            // Valida
            if (!form.valid()) return;

            var formData = form.serialize();
            var modo = form.data("modo") || "insertar";

            var url = (modo === "editar")
                ? '@Url.Action("Actualizar", "Inventario")'
                : '@Url.Action("Insertar", "Inventario")';

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                success: function (result) {
                    if (result.success) {
                        $("#modalInventario").modal("hide");
                        mostrarModalMensaje(result.message);
                        document.getElementById("modalMensaje")
                            .addEventListener("hidden.bs.modal", function () {
                                location.reload();
                            }, { once: true });
                    } else {
                        // 🚨 Reemplaza el contenido del modal
                        $("#modalInventario .modal-content").html(result);

                        // 🚨 Reparsea validaciones
                        const nuevoForm = $("#formInventario");
                        if ($.validator && $.validator.unobtrusive) {
                            $.validator.unobtrusive.parse(nuevoForm);
                        }

                        // No hace falta volver a registrar el evento gracias a .on()
                    }
                },
                error: function () {
                    mostrarModalMensaje("Ocurrió un error inesperado al guardar.");
                }
            });
        });

        // Abrir modal para editar
        $(document).on("click", ".btn-editar", function () {
            const data = $(this).data("model"); // contiene las claves

            $.ajax({              
                url: '@Url.Action("ObtenerPorId", "Inventario")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (result) {
                    if (!result) {
                        mostrarModalMensaje("No se pudo obtener el registro.");
                        return;
                    }

                    const datos = result;

                    // Recorre y llenar campos
                    for (const campo in datos) {
                        const campoMayus = campo.toUpperCase();
                        const $input = $("#formInventario").find(`[name='${campoMayus}']`);

                        //console.log(`Campo: ${campo} → Buscando como: ${campoMayus} → Encontrado: ${$input.length > 0}`);

                        if ($input.length > 0) {
                            const tipo = $input.attr("type");
                            const valor = datos[campo];

                            if (tipo === "date" && valor) {
                                $input.val(valor.substring(0, 10));
                            } else {
                                $input.val(valor);
                            }
                        } else {
                            console.warn(`No se encontró el campo '${campoMayus}' en el formulario.`);
                        }
                    }

                    // Bloquear campos clave
                    const claves = [
                        "COD_CIA",
                        "COMPANIA_VENTA_3",
                        "ALMACEN_VENTA",
                        "TIPO_MOVIMIENTO",
                        "TIPO_DOCUMENTO",
                        "NRO_DOCUMENTO",
                        "COD_ITEM_2"
                    ];
                    claves.forEach(campo => {
                        $("#formInventario").find(`[name='${campo}']`)
                            .prop("readonly", true)
                            .addClass("bg-light"); // opcional: visualmente se ve desactivado
                    });

                    // Modo edición
                    $("#formInventario").data("modo", "editar");

                    // Mostrar modal
                    const modal = new bootstrap.Modal(document.getElementById("modalInventario"));
                    modal.show();
                },
                error: function () {
                    mostrarModalMensaje("Ocurrió un error al obtener los datos del inventario.");
                }
            });
        });
    </script>
}